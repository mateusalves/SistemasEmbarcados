

   1. Crie um "Olá mundo!" em C.

            #include <stdio.h>
            
            int main ()
            {
            	printf("Ola Mundo!\n");	
            	return 0;
            }
            
            terminal:
            $gcc ola.c
            $./a.out
            $Ola Mundo!

   2. Crie um código em C que pergunta ao usuário o seu nome, e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_1':
      
      $ ./ola_usuario_1
      $ Digite o seu nome: Eu
      $ Ola Eu

            #include<stdio.h>
            
            int main()
            {
            	char nome[20];
            
            	printf("Digite o seu nome: ");
            	scanf("%s", nome);
            
            	printf("Ola %s\n", nome);
            	return 0;	
            }
            
            Terminal:
                        
            mateus@R2D2:~/Documents/Embarcados$ gcc ola_usuario_1.c 
            mateus@R2D2:~/Documents/Embarcados$ ./a.out
            Digite o seu nome: Mateus
            Ola Mateus

   3. Apresente os comportamentos do código anterior nos seguintes casos:

      (a) Se o usuário insere mais de um nome.
      
      $ ./ola_usuario_1
      $ Digite o seu nome: Eu Mesmo
      
mateus@R2D2:~/Documents/Embarcados$ ./a.out
Digite o seu nome: Mateus Alves
Ola Mateus

      
      (b) Se o usuário insere mais de um nome entre aspas duplas. Por exemplo:
      
      $ ./ola_usuario_1
      $ Digite o seu nome: "Eu Mesmo"
      
mateus@R2D2:~/Documents/Embarcados$ ./a.out
Digite o seu nome: "Mateus Alves"
Ola "Mateus
      
      (c) Se é usado um pipe. Por exemplo:
      
      $ echo Eu | ./ola_usuario_1
      
mateus@R2D2:~/Documents/Embarcados$ echo Mateus | ./a.out
Digite o seu nome: Ola Mateus

      
      (d) Se é usado um pipe com mais de um nome. Por exemplo:
      
      $ echo Eu Mesmo | ./ola_usuario_1
 
mateus@R2D2:~/Documents/Embarcados$ echo Mateus Alves | ./a.out
Digite o seu nome: Ola Mateus
      
      (e) Se é usado um pipe com mais de um nome entre aspas duplas. Por exemplo:
      
      $ echo "Eu Mesmo" | ./ola_usuario_1

mateus@R2D2:~/Documents/Embarcados$ echo "Mateus Alves" | ./a.out
Digite o seu nome: Ola Mateus

      (f) Se é usado o redirecionamento de arquivo. Por exemplo:
      
      $ echo Ola mundo cruel! > ola.txt
      $ ./ola_usuario_1 < ola.txt

mateus@R2D2:~/Documents/Embarcados$ ./a.out < ola.c
Digite o seu nome: Ola Ola


    4. Crie um código em C que recebe o nome do usuário como um argumento de entrada (usando as variáveis argc e *argv[]), e imprime no terminal "Ola " e o nome do usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_2':
      
      $ ./ola_usuario_2 Eu
      $ Ola Eu

#include<stdio.h>

int main(int argc, char *argv[])
{
	printf("Ola %s\n",argv[1]);
	return 0;
}

Terminal

mateus@R2D2:~/Documents/Embarcados$ gcc Questao_4.c 
mateus@R2D2:~/Documents/Embarcados$ ./a.out Mateus
Ola Mateus

    5. Apresente os comportamentos do código anterior nos seguintes casos:

      (a) Se o usuário insere mais de um nome.
      
      $ ./ola_usuario_2 Eu Mesmo
      
mateus@R2D2:~/Documents/Embarcados$ ./a.out Mateus Alves
Ola Mateus
    
      (b) Se o usuário insere mais de um nome entre aspas duplas. Por exemplo:
      
      $ ./ola_usuario_2 "Eu Mesmo"

mateus@R2D2:~/Documents/Embarcados$ ./a.out "Mateus Alves"
Ola Mateus Alves

      (c) Se é usado um pipe. Por exemplo:
      
      $ echo Eu | ./ola_usuario_2

mateus@R2D2:~/Documents/Embarcados$ echo Mateus | ./a.out
Ola (null)
 
      (d) Se é usado um pipe com mais de um nome. Por exemplo:
      
      $ echo Eu Mesmo | ./ola_usuario_2

mateus@R2D2:~/Documents/Embarcados$ echo Mateus Alves | ./a.out
Ola (null)
      
      (e) Se é usado um pipe com mais de um nome entre aspas duplas. Por exemplo:
      
      $ echo Eu Mesmo | ./ola_usuario_2

mateus@R2D2:~/Documents/Embarcados$ echo "Mateus Alves" | ./a.out
Ola (null)

      
      (f) Se é usado o redirecionamento de arquivo. Por exemplo:
      
      $ echo Ola mundo cruel! > ola.txt
      $ ./ola_usuario_2 < ola.txt

mateus@R2D2:~/Documents/Embarcados$ echo Ola Mundo Cruel! > ola.c
mateus@R2D2:~/Documents/Embarcados$ ./a.out < ola.c
Ola (null)


   6. Crie um código em C que faz o mesmo que o código da questão 4, e em seguida imprime no terminal quantos valores de entrada foram fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_usuario_3':

      $ ./ola_usuario_3 Eu
      $ Ola Eu
      $ Numero de entradas = 2
      
#include<stdio.h>

int main(int argc, char *argv[])
{
	printf("Ola %s\n",argv[1]);
	printf("Numero de entradas = %d\n", argc);
	return 0;
}

Terminal:

mateus@R2D2:~/Documents/Embarcados$ gcc Questao_6.c 
mateus@R2D2:~/Documents/Embarcados$ ./a.out Mateus
Ola Mateus
Numero de entradas = 2

      
   7. Crie um código em C que imprime todos os argumentos de entrada fornecidos pelo usuário. Por exemplo, considerando que o código criado recebeu o nome de 'ola_argumentos':

      $ ./ola_argumentos Eu Mesmo e Minha Pessoa
      $ Argumentos: Eu Mesmo e Minha Pessoa

#include<stdio.h>

int main(int argc, char *argv[])
{
	int i;

	printf("Argumentos: ");
	
	for (i=1; i<argc; i++)	printf("%s ",argv[i]);
	
	printf ("\n");
	return 0;
}

Terminal:

mateus@R2D2:~/Documents/Embarcados$ gcc Questao_7.c mateus@R2D2:~/Documents/Embarcados$ ./a.out Mateus Alves deveria tirar SS em Embarcados
Argumentos: Mateus Alves deveria tirar SS em Embarcados 


   8. Crie uma função que retorna a quantidade de caracteres em uma string, usando o seguinte protótipo: int Num_Caracs(char *string); Salve-a em um arquivo separado chamado 'num_caracs.c'. Salve o protótipo em um arquivo chamado 'num_caracs.h'. Compile 'num_caracs.c' para gerar o objeto 'num_caracs.o'.
  

#include<stdio.h>

int Num_Caracs(char *string)
{
		int i=0;
		while(string[i] != '\0')
			i++;
		return i;
}

Terminal: 

mateus@R2D2:~/Documents/Embarcados$ gcc -c num_caracs.c

   9. Re-utilize o objeto criado na questão 8 para criar um código que imprime cada argumento de entrada e a quantidade de caracteres de cada um desses argumentos. Por exemplo, considerando que o código criado recebeu o nome de 'ola_num_caracs_1':

      $ ./ola_num_caracs_1 Eu Mesmo
      $ Argumento: ./ola_num_caracs_1 / Numero de caracteres: 18
      $ Argumento: Eu / Numero de caracteres: 2
      $ Argumento: Mesmo / Numero de caracteres: 5
      
      #include <stdio.h>
#include "num_caracs.h"

int main(int argc, char** argv)
{
    int i;

    if(argc>=2)
    {
        for(i = 0; i < argc; i++)
            printf("Argumento: %s / Numero de caracteres: %d\n",argv[i],Num_Caracs(argv[i]));
    }
    printf("\n");
    return 0;
}

Terminal
mateus@R2D2:~/Documents/Embarcados$ gcc ola_num_caracs_1.c num_caracs.o
mateus@R2D2:~/Documents/Embarcados$ ls
a.out         num_caracs.h  ola.c               ola_usuario_1.c  Questao_6.c
num_caracs.c  num_caracs.o  ola_num_caracs_1.c  Questao_4.c      Questao_7.c
mateus@R2D2:~/Documents/Embarcados$ ./a.out Mateus Alves da Rocha
Argumento: ./a.out / Numero de caracteres: 7
Argumento: Mateus / Numero de caracteres: 6
Argumento: Alves / Numero de caracteres: 5
Argumento: da / Numero de caracteres: 2
Argumento: Rocha / Numero de caracteres: 5



   10. Crie um Makefile para a questão anterior.
   
   MakeFile:
   
   ola_num_caracs_1: 
	gcc -c num_caracs.c
	gcc ola_num_caracs_1.c num_caracs.o
	./a.out Mateus Alves da Rocha


terminal:

mateus@R2D2:~/Documents/Embarcados$ make ola_num_caracs_1
gcc -c num_caracs.c
gcc ola_num_caracs_1.c num_caracs.o
./a.out Mateus Alves da Rocha
Argumento: ./a.out / Numero de caracteres: 7
Argumento: Mateus / Numero de caracteres: 6
Argumento: Alves / Numero de caracteres: 5
Argumento: da / Numero de caracteres: 2

   11. Re-utilize o objeto criado na questão 8 para criar um código que imprime o total de caracteres nos argumentos de entrada. Por exemplo, considerando que o código criado recebeu o nome de 'ola_num_caracs_2':

      $ ./ola_num_caracs_2 Eu Mesmo
      $ Total de caracteres de entrada: 25

#include<stdio.h>
#include "num_caracs.h"

int main(int argc, char *argv[])
{
	int i, total=0;
	for(i=0;i<argc;i++)
	total+=Num_Caracs(argv[i]);
	printf("Total de caracteres de entrada: %d\n", total);
	return 0;
}

terminal:

mateus@R2D2:~/Documents/Embarcados$ gcc ola_num_caracs_2.c num_caracs.o
mateus@R2D2:~/Documents/Embarcados$ ./a.out Mateus Alves
Total de caracteres de entrada: 18


   12. Crie um Makefile para a questão anterior.
   
Makefile:
ola_num_caracs_2: 
	gcc -c num_caracs.c
	gcc ola_num_caracs_2.c num_caracs.o
	./a.out Mateus Alves


Terminal:

mateus@R2D2:~/Documents/Embarcados$ make ola_num_caracs_2
gcc -c num_caracs.c
gcc ola_num_caracs_2.c num_caracs.o
./a.out Mateus Alves
Total de caracteres de entrada: 18

